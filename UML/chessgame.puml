@startuml Application use cases diagram
skinparam actorStyle awesome
title UML of chess game

enum GameState{
    NEWGAME
    PLAYING
    GAMEOVER
}

enum ColorType{
    BACKGROUND
    HOVER
    SELECT
    TURN
}

class Chessboard{
    ..property..
    + boardHTML
    + chessmap : Array
    + state
    + selectedSquare
    + turn
    + secondClick
    + possibleMoves:Array
    ..method..
    + moveChess()
    + hightLightPossibleSquare()
    + isValidSquare()
    + isAbleToCastling()
    + castle()
    + findSquare()
    + handleClickChessman()
    + render()
    + setNewChessMap()
    + setNewChessBoard()
    + findChessmanSquare()
    + isCheckMated()
}

class Square{
    + isHighlighted
    + isSuggested
    + chessman

    + setChessman()
    + getTile()

}

class Chessman{
    ..property..
    + position_X
    + position_Y
    + image
    + color
    + type
    ..setter..
    + setPosition()
    + setImage()
    ..getter..
    + getImage()
    + getColor()
    ..
    # getPossibleMoves()
}

class Pawn{
    + direct
    + promotePawn()
}

class Bishop{

}

class King{
    + statusMoved
    + hasMoved()
    + moved()
    + checkCheckmated()
}

class Queen{

}

class Rook{
    + statusMoved
    + hasMoved()
    + moved()
}

class Knight{

}




Pawn --|> Chessman
Bishop --|> Chessman
King --|> Chessman
Queen --|> Chessman
Rook --|> Chessman
Knight --|> Chessman


Chessboard --> Square
Square "1"..o "0.n" Chessman




